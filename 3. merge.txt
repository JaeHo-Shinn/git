1. 3-way merge => 일반적으로 알고 있는 merge 흐름

          (메인브랜치)commit1-----commit2------commit3----------------commit4
                                   |                                   | (merge)
                                   |                                   |
                                commit2-1 ------commit2-2 ---------commit2-3
                              (브랜치생성)


2. fast-forward merge
   => 브랜치 생성시점부터 main브랜치에 추가 commit이 없는 경우
      merge 시키면 자동으로 new 브랜치에게 니가 앞으로 main브랜치야 라고 한다 

        (메인브랜치)commit1-----commit2
                                  |                                    
                                  |                                   
                               commit2-1 ------commit2-2 ---------commit2-3   =>main 브랜치
                               (new브랜치)                          (merge)
      
      "기준이 되는 브랜치에 신규 commit이 없으면" 자동으로 fast-forward merge가 발동,
      @@@@@
      물론 싫으면 git merge --no-ff 브랜치명 해서 강제로 3-way merge 할 수도 있다.

3. rebase and merge
   new브랜치의 시작점을 변경해 주는 행위
    => (ex) 1번에서 new브랜치의 베이스를 commit4로 변경해주면 fast-forward merge 가능

 (1)git switch 새로운브랜치    rebase할 브랜치로 이동
 (2)git rebase main           리베이스

 ---fast forwar merge 하려면 아래로--- 아니면 이후 작업 진행
 (3)git switch main           메인으로 이동
 (4)git merge 새로운브랜치     merge 


           (메인브랜치)commit1-----commit2------commit3
                                   |                              
                                   |      ===> (rebase)  
                                   |                        
                                commit2-1 ------commit2-2 
                              (브랜치생성)

           (메인브랜치)commit1-----commit2------commit3
                                                 |                              
                                                 |                              
                                             commit2-1 ------commit2-2                                        

4. squash and merge

(1)  git switch main                메인브랜치로 이동
(2) git merge --squash 브랜치명      squash merge 진행
(3) git commit -m '메세지'           commit

 모든 브랜치를 3-way merge 해버리면 큰 프로젝트는 log가 너무 복잡해져서 알아보기가 매우 힘듦
 3. rebase를 하거나 아니면 
 4. squash and merge 하면 새로운 브랜치에 있던 commit 들을 연결해주는게 아니라 똑 떼와서 main 브랜치에 붙여줌
    그러면 main 브랜치의 git log 출력해볼 때
    merge 완료된 브랜치의 commit 같은 것들은 출력되지 않는다.

           (메인브랜치)commit1-----commit2------commit3
                                   |                              
                                   |    
                                   |                        
                                commit2-1 ------commit2-2 

           (메인브랜치)commit1-----commit2------commit3 ------ commit4 (=commit2-1 ------commit2-2)
              